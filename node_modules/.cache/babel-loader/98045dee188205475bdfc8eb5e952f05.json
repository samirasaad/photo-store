{"ast":null,"code":"var _jsxFileName = \"/home/samira/Smaira/unsplashProj/src/containers/Home/Home.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport SearchInput from '../../components/SearchInput/SearchInput';\nimport { searchRequest } from './../../store/actions/search';\nimport ImagesList from '../ImagesList/ImagesList';\nimport Pagination from \"react-js-pagination\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {// const {searchRequest} =this.props;\n      // searchRequest({query:'cars'})\n    };\n\n    this.componentDidUpdate = prevProps => {\n      const {\n        results\n      } = this.props;\n\n      if (prevProps.results !== this.props.results) {\n        this.setState({\n          photosList: results\n        });\n      }\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        searchTerm: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        searchRequest\n      } = this.props;\n      searchRequest({\n        query: this.state.searchTerm,\n        page: 1,\n        per_page: 25\n      });\n    };\n\n    this.state = {\n      searchTerm: '',\n      photosList: [],\n      activePage: 1\n    };\n  }\n\n  handlePageChange(pageNumber) {\n    console.log(`active page is ${pageNumber}`);\n    this.setState({\n      activePage: pageNumber\n    });\n  }\n\n  render() {\n    const {\n      photosList,\n      activePage\n    } = this.state;\n    const {\n      total\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, \"Serach for a photo\"), /*#__PURE__*/React.createElement(SearchInput, {\n      handleChange: this.handleChange,\n      handleSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }), photosList.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ImagesList, {\n      photosList: photosList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Pagination, {\n      itemClass: \"page-item\",\n      linkClass: \"page-link\",\n      activePage: this.state.activePage,\n      itemsCountPerPage: 25,\n      totalItemsCount: total,\n      pageRangeDisplayed: 5,\n      onChange: this.handlePageChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = ({\n  locale: {\n    lang\n  },\n  search: {\n    results,\n    total,\n    total_pages\n  }\n}) => ({\n  lang,\n  results,\n  total,\n  total_pages\n});\n\nexport default connect(mapStateToProps, {\n  searchRequest\n})(Home);","map":{"version":3,"sources":["/home/samira/Smaira/unsplashProj/src/containers/Home/Home.js"],"names":["React","Component","connect","SearchInput","searchRequest","ImagesList","Pagination","Home","constructor","props","componentDidMount","componentDidUpdate","prevProps","results","setState","photosList","handleChange","e","searchTerm","target","value","handleSubmit","preventDefault","query","state","page","per_page","activePage","handlePageChange","pageNumber","console","log","render","total","length","mapStateToProps","locale","lang","search","total_pages"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport SearchInput from '../../components/SearchInput/SearchInput';\nimport { searchRequest } from './../../store/actions/search';\nimport ImagesList from '../ImagesList/ImagesList';\nimport Pagination from \"react-js-pagination\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchTerm: '',\n      photosList: [],\n      activePage: 1\n    }\n  }\n  componentDidMount = () => {\n    // const {searchRequest} =this.props;\n    // searchRequest({query:'cars'})\n  }\n\n\n  componentDidUpdate = (prevProps) => {\n    const { results } = this.props;\n    if (prevProps.results !== this.props.results) {\n      this.setState({\n        photosList: results\n      })\n    }\n  }\n  handleChange = (e) => {\n    this.setState({\n      searchTerm: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { searchRequest } = this.props;\n    searchRequest({ query: this.state.searchTerm, page: 1, per_page:25})\n\n  }\n\n  handlePageChange(pageNumber) {\n    console.log(`active page is ${pageNumber}`);\n    this.setState({activePage: pageNumber});\n  }\n\n  render() {\n    const {photosList, activePage} = this.state;\n    const {total} = this.props;\n    return (\n      <>\n        <h1>Serach for a photo</h1>\n        <SearchInput handleChange={this.handleChange}\n          handleSubmit={this.handleSubmit} />\n       {photosList.length > 0 &&\n       <>\n        <ImagesList photosList={photosList}/>\n        <div>\n        <Pagination\n          itemClass=\"page-item\"\n          linkClass=\"page-link\"\n          activePage={this.state.activePage}\n          itemsCountPerPage={25}\n          totalItemsCount={total}\n          pageRangeDisplayed={5}\n          onChange={this.handlePageChange}\n        />\n      </div>\n      </>\n       }\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = ({ locale: { lang }, search: { results, total, total_pages } }) => ({\n  lang,\n  results,\n  total,\n  total_pages,\n})\n\nexport default connect(mapStateToProps, { searchRequest })(Home);"]},"metadata":{},"sourceType":"module"}